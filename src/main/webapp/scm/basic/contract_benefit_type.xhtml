<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://xmlns.jcp.org/jsf/html" xmlns:f="http://xmlns.jcp.org/jsf/core"  xmlns:ui="http://xmlns.jcp.org/jsf/facelets" xmlns:p="http://primefaces.org/ui" xmlns:c="http://xmlns.jcp.org/jsp/jstl/core" xmlns:o="http://omnifaces.org/ui"  >      
  #{contractBenefitTypeView.switchContractBenefitType(main, viewType)}

  <ui:decorate template="/WEB-INF/resources/theme1/pageBasic.xhtml">
    <ui:param name="label" value="#{lang.contractBenefitType}" />
    <ui:param name="ids" value="contractBenefitType" />

    <ui:define name="deleteList" >
      <p:commandButton action="#{contractBenefitTypeView.deleteContractBenefitType(main)}" value="#{lang.btnYes}" oncomplete="wdgOff('contractBenefitTypeWidgetDelConf')" process="f1" update="f1" >
        <f:setPropertyActionListener target="#{main.pageData.search}" value="#{true}" />
      </p:commandButton>
    </ui:define>

    <ui:define name="menu1" >
      <p:menuitem actionListener="#{contractBenefitTypeView.cloneContractBenefitType(main)}" value="#{lang.clone}" process="f1" update="f1" onclick="toTop()" icon="fa fa-clone" iconPos="left"/>
    </ui:define>

    <ui:define name="deleteForm" >
      <p:commandButton action="#{contractBenefitTypeView.deleteContractBenefitType(main)}" value="#{lang.delete}" onclick="wdgOff('contractBenefitTypeWidgetDel')" partialSubmit="true" process="@this" update="f1" title="#{lang.delete}" icon="ui-icon-delete" />
    </ui:define>

    <ui:define name="save" >
      <h:commandButton action="#{contractBenefitTypeView.saveContractBenefitType(main)}" value="#{lang.save}" onclick="toTop()" styleClass="btn btn-primary"><f:ajax execute="f1" render="f1"  /></h:commandButton>     
    </ui:define>   

    <ui:define name="form">            
      <p:outputLabel value="#{lang.title}" for="title" />
      <h:panelGroup><p:inputText styleClass="fw" value="#{contractBenefitTypeView.contractBenefitType.title}" maxlength="200" required="true" requiredMessage="#{lang.title} #{lang.isRequired}" id="title" /><p:message for="title" display="text"/></h:panelGroup>
      <p:outputLabel value="#{lang.isPercentage}" for="isPercentage" />
      <h:panelGroup><p:inputNumber value="#{contractBenefitTypeView.contractBenefitType.isPercentage}" converterMessage="#{lang.isPercentage} #{lang.invalidNumber}" decimalPlaces="0" onfocus="this.select()" inputStyleClass="text-right" maxValue="99999" minValue="0" maxlength="5" id="isPercentage" /><p:message for="isPercentage" display="text"/></h:panelGroup>
      <p:outputLabel value="#{lang.isSlab}" for="isSlab" />
      <h:panelGroup><p:inputNumber value="#{contractBenefitTypeView.contractBenefitType.isSlab}" converterMessage="#{lang.isSlab} #{lang.invalidNumber}" decimalPlaces="0" onfocus="this.select()" inputStyleClass="text-right" maxValue="99999" minValue="0" maxlength="5" id="isSlab" /><p:message for="isSlab" display="text"/></h:panelGroup>
    </ui:define>

    <ui:define name="after">
      <ui:decorate template="/WEB-INF/resources/theme1/auditInfoForm.xhtml">
        <ui:define name="cby">#{appView.display(contractBenefitTypeView.contractBenefitType.createdBy)}</ui:define>
        <ui:define name="cat">#{appView.dateTime(contractBenefitTypeView.contractBenefitType.createdAt)}</ui:define>
        <ui:define name="uby">#{appView.display(contractBenefitTypeView.contractBenefitType.modifiedBy)}</ui:define>
        <ui:define name="uat">#{appView.dateTime(contractBenefitTypeView.contractBenefitType.modifiedAt)}</ui:define>
      </ui:decorate>
    </ui:define>

    <ui:define name="list">
      <p:dataTable id="contractBenefitTypeTable" var="contractBenefitTypeVar" widgetVar="contractBenefitTypeWidget" tableStyleClass="mDataTable mDataTable-center fw editLinks"
                   lazy="true" value="#{contractBenefitTypeView.contractBenefitTypeLazyModel}" rows="#{main.pageData.pageSize}" rowKey="#{contractBenefitTypeVar.id}"
                   rowsPerPageTemplate="#{main.pageData.pageSize},50,100" paginator="true" paginatorTemplate="{FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} &lt;span class='p-x-5'&gt;  &lt;/span&gt; #{lang.rowsPerPage} {RowsPerPageDropdown} &lt;span class='R p-y-10 p-x-5'&gt; #{lang.showing} {CurrentPageReport} #{lang.outof} #{main.pageData.totalRecords} #{lang.entries} &lt;/span&gt; "   
                   selection="#{contractBenefitTypeView.contractBenefitTypeSelected}" rowSelectMode="checkbox" rowHover="true" reflow="false" draggableColumns="true" paginatorAlwaysVisible="true" paginatorPosition="bottom"  scrollable="false"  >
        <p:column selectionMode="multiple" exportable="false" />        
        <p:column headerText="#{lang.title}" sortBy="#{contractBenefitTypeVar.title}" field="title">
          <p:commandLink action="#{main.setViewType(editform)}" value="#{appView.display(contractBenefitTypeVar.title)}" process="@this" update="f1" immediate="true" 
                         onstart="block()" oncomplete="unblock()" title="#{lang.editMe}">
            <f:setPropertyActionListener target="#{contractBenefitTypeView.contractBenefitType}" value="#{contractBenefitTypeVar}" />
          </p:commandLink>
          <h:outputText  title="#{appView.title(contractBenefitTypeVar.title)}" escape="false" />
        </p:column>
        <p:column headerText="#{lang.isPercentage}" sortBy="#{contractBenefitTypeVar.isPercentage}" field="is_percentage" style="text-align: right"><h:outputText value="#{appView.number(contractBenefitTypeVar.isPercentage)}" escape="false" /></p:column>
        <p:column headerText="#{lang.isSlab}" sortBy="#{contractBenefitTypeVar.isSlab}" field="is_slab" style="text-align: right"><h:outputText value="#{appView.number(contractBenefitTypeVar.isSlab)}" escape="false" /></p:column>
        <p:column headerText="#{lang.log}">
          <ui:decorate template="/WEB-INF/resources/theme1/auditInfo.xhtml">
            <ui:define name="cby">#{appView.display(contractBenefitTypeVar.createdBy)}</ui:define>
            <ui:define name="cat">#{appView.dateTime(contractBenefitTypeVar.createdAt)}</ui:define>
            <ui:define name="uby">#{appView.display(contractBenefitTypeVar.modifiedBy)}</ui:define>
            <ui:define name="uat">#{appView.dateTime(contractBenefitTypeVar.modifiedAt)}</ui:define>
            <ui:define name="id">#{appView.display(contractBenefitTypeVar.id)}</ui:define>
          </ui:decorate>
        </p:column>
      </p:dataTable> 	
    </ui:define>   
  </ui:decorate>
</ui:composition>
